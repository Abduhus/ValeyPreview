#!/bin/bash

# Start script for ValleyPreview Perfume E-commerce Platform on Railway
# This script handles both development and production environments

echo "=== ValleyPreview Perfume E-commerce Platform ==="
echo "Environment: ${NODE_ENV:-development}"
echo "Port: ${PORT:-5000}"

# Function to check if we're running on Railway
is_railway() {
    [[ -n "$RAILWAY_ENVIRONMENT" ]] || [[ -n "$RAILWAY_PROJECT_ID" ]]
}

# Function to convert images to WebP format
convert_images_to_webp() {
    echo "Converting images to WebP format..."
    
    # Check if cwebp is available
    if command -v cwebp &> /dev/null; then
        # Convert JPG images to WebP
        if [ -d "client/src/assets" ]; then
            for file in client/src/assets/*.jpg; do
                if [ -f "$file" ]; then
                    filename=$(basename "$file" .jpg)
                    echo "Converting $filename.jpg to WebP..."
                    cwebp -q 80 "$file" -o "client/src/assets/${filename}.webp"
                fi
            done
            
            # Convert PNG images to WebP
            for file in client/src/assets/*.png; do
                if [ -f "$file" ]; then
                    filename=$(basename "$file" .png)
                    echo "Converting $filename.png to WebP..."
                    cwebp -q 80 "$file" -o "client/src/assets/${filename}.webp"
                fi
            done
        else
            echo "Assets directory not found, skipping image conversion"
        fi
    else
        echo "Warning: cwebp not found, skipping image conversion"
        echo "For WebP conversion, please install WebP tools:"
        echo "Ubuntu/Debian: apt-get install webp"
        echo "CentOS/RHEL: yum install libwebp-tools"
        echo "macOS: brew install webp"
    fi
}

# Function to install dependencies
install_dependencies() {
    echo "Installing project dependencies..."
    
    # Install npm dependencies
    if is_railway; then
        # On Railway, try npm ci first for faster builds, fallback to npm install if there are issues
        echo "Attempting to use npm ci for faster builds..."
        npm ci --only=production 2>/dev/null
        if [ $? -ne 0 ]; then
            echo "npm ci failed, falling back to npm install..."
            npm install --only=production
        fi
    else
        # For local development
        npm install
    fi
    
    # Check if installation was successful
    if [ $? -ne 0 ]; then
        echo "Error: Failed to install dependencies"
        exit 1
    fi
}

# Function to install dev dependencies (needed for build)
install_dev_dependencies() {
    echo "Installing development dependencies for build..."
    
    # Install dev dependencies
    npm install --include=dev
    
    # Check if installation was successful
    if [ $? -ne 0 ]; then
        echo "Error: Failed to install development dependencies"
        exit 1
    fi
}

# Function to build the project
build_project() {
    echo "Building project..."
    
    # Install dev dependencies if not already installed
    if ! command -v tsc &> /dev/null; then
        install_dev_dependencies
    fi
    
    # Run build script
    npm run build
    
    # Check if build was successful
    if [ $? -ne 0 ]; then
        echo "Error: Failed to build project"
        exit 1
    fi
}

# Function to start development server
start_development() {
    echo "Starting development server..."
    
    # Install all dependencies including dev dependencies
    install_dependencies
    install_dev_dependencies
    
    # Convert images to WebP format
    convert_images_to_webp
    
    # Start the development server
    echo "Server will be available at http://localhost:${PORT:-5000}"
    npm run dev
}

# Function to start production server
start_production() {
    echo "Starting production server..."
    
    # Install production dependencies
    install_dependencies
    
    # On Railway, we might want to skip image conversion for faster deploys
    if ! is_railway; then
        # Convert images to WebP format
        convert_images_to_webp
    else
        echo "Skipping image conversion on Railway for faster deployment"
    fi
    
    # Build the project if not already built or if running locally
    if [ ! -d "dist" ] || ! is_railway; then
        build_project
    else
        echo "Using pre-built dist directory"
    fi
    
    # Start the production server
    echo "Server will be available at http://localhost:${PORT:-5000}"
    npm run start
}

# Main execution logic
if is_railway; then
    echo "Running on Railway"
    # On Railway, always run in production mode
    start_production
else
    case "${NODE_ENV:-development}" in
        production)
            echo "Running in production mode"
            start_production
            ;;
        development|*)
            echo "Running in development mode"
            start_development
            ;;
    esac
fi